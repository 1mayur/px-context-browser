@import "_helpers";
@import "_spec-variables";

.contextBrowserToggle {
  cursor:pointer;
  z-index: 1001;
}

.contextBrowserContainer,
.contextBrowserTray {
  width:100%;
  z-index: 1000;
}

.contextBrowserContainer {
  overflow: visible;
  position: relative;

  @height: @side-nav-em-pixel-ratio * 340;
  @shadow-margin: 10px;

  .contextBrowserTray {
    overflow: hidden;
    position: absolute;
    top:0;
    left:0;

    background-color: white;
    box-shadow: 0 0 @shadow-margin black;

    > div {
      height: @height;
      width: 100%;
      transition: margin-top 0.5s ease 0s;
      margin-top: -@height - @shadow-margin;
      > div {
        min-height: @height;
      }
    }

    &.open {
      > div {
        margin-top: 0;
      }
    }
  }

}

.columnBrowser {

  @min-width: 240;
  @ruler-width: @side-nav-em-pixel-ratio * @min-width;

  > div {

    .flexBox();

    .columnConfig(@columns) {
      &.columns-@{columns} {
        > div {
          width:100%/@columns;
        }
      }
      &.column-index-@{columns} {
        > div {
          &:nth-child( -n + @{columns}) {
            margin-left:-@ruler-width;
            width:@ruler-width;
            overflow: hidden;

            html[dir=rtl] & {
              margin-right:-@ruler-width;
              margin-left:0;
            }
          }
        }
      }
    }

    .columnConfig(1);
    .columnConfig(2);
    .columnConfig(3);
    .columnConfig(4);
    .columnConfig(5);
    .columnConfig(6);
    .columnConfig(7);
    .columnConfig(8);
    .columnConfig(9);
    .columnConfig(10);
    .columnConfig(11);
    .columnConfig(12);

    > div {
      background: white;
      overflow: hidden;

      transition:
      width @default-transition-params,
      min-width @default-transition-params,
      margin-left @default-transition-params,
      margin-right @default-transition-params,
      opacity @default-transition-params;

      &, > div {
        min-width: @ruler-width;
      }

      box-sizing: border-box;
      .border-LR(1px solid #DDD);
      .border-collapse-adjacent-LR();

      &.new, &.removed {
        width:0;
        min-width: 0;
        opacity: 0;
      }

      &.new {
        visibility: hidden;
      }
    }


  }

  .ruler {
    position: absolute;
    visibility: hidden;
    width: @ruler-width; // Make sure this isn't overridden.
  }
}
