/*
 * Copyright (c) 2014 GE Global Research. All rights reserved.
 *
 * The copyright to the computer software herein is the property of
 * GE Global Research. The software may be used and/or copied only
 * with the written permission of GE Global Research or in accordance
 * with the terms and conditions stipulated in the agreement/contract
 * under which the software has been supplied.
 */

//
// Sass for the Predix notion of the px-context-browser component
//
// @author: Oren J. Ferrari
//

@import "px-context-browser-sketch";


$side-nav-em-pixel-ratio: 1.0em / 15;
// 1.6em = 24px;

// Default Transition Length
$default-transition-length: 0.35s;
$default-transition-params: $default-transition-length ease 0s;

$min-width: 240;
$ruler-width: $side-nav-em-pixel-ratio * $min-width;

@import "flex-helpers";

:host {
  display: block;
}

@mixin columnConfig($columns) {
  &.columns-#{$columns} {
    .column {
      width: 100%/$columns;
    }
  }
  &.column-index-#{$columns} {
    .column {
      &:nth-child(-n + #{$columns}) {
        margin-left: -$ruler-width;
        width: $ruler-width;
        overflow: hidden;

        html[dir=rtl] & {
          margin-right: -$ruler-width;
          margin-left: 0;
        }
      }
    }
  }
}

// The actual column browser resides within...
.column-browser {

  // column-browser-container is on the outside of .column-browser
  &-container {

    height: 100%;

    * {
      overflow: hidden;
    }
    .scroll-y {
      overflow-y: scroll;
    }

    .breadcrumb,
    .selectable-item {
      cursor: pointer;
    }

    .breadcrumbConnector {
      margin-left: 1ex;
      margin-right: 1ex;

      &:last-of-type {
        display: none;
      }

    }

    .spacer-2-x > .breadcrumbConnector {
      margin:0;
    }


    > div > .head {
      line-height: 2.5;
    }
  }

  // Ensures proper visibility for some icons that get cut off past their edge.
  .fa {
    padding-left:1px;
    padding-right:1px;
  }

  > div {
    @include columnConfig(1);
    @include columnConfig(2);
    @include columnConfig(3);
    @include columnConfig(4);
    @include columnConfig(5);
    @include columnConfig(6);
    @include columnConfig(7);
    @include columnConfig(8);
    @include columnConfig(9);
    @include columnConfig(10);
    @include columnConfig(11);
    @include columnConfig(12);
  }

  .column {

    transform: translateZ(0); // This is a special hack to prevent font-awesome (or any other transformed element) from rendering on top of this unexpectedly.
    transition:
      width $default-transition-params,
      min-width $default-transition-params,
      margin-left $default-transition-params,
      margin-right $default-transition-params,
      opacity $default-transition-params;

    box-sizing: border-box;
    border-width: 1px;
    border-style: solid;
    border-top: 0;
    border-bottom: 0;
    html:not([dir=rtl]) & {
      border-left-width: 0;
    }

    html[dir=rtl] & {
      border-right-width: 0;
    }

    &.new, &.removed {
      width: 0 !important; // specificity is to refined.
      min-width: 0;
      opacity: 0;
    }

    &.new {
      visibility: hidden;
    }
  }

  .ruler {
    width: $ruler-width;
    position: absolute;
    visibility: hidden;
    height: 0;
    top: 0;
    left: 0;
  }


  // An extra div is required to enforce the inner boundary even when the outer is animating.
  .column > div
  {
    min-width: $ruler-width;
    width:100.5%; // Ensures pixels fill out at the edge of a % defined container width.
  }

  ul {
    margin: 0;
    padding: 0;
  }

  .level {
    li {
      transition: color 0.2s ease 0s, background-color 0.2s ease 0s; // TODO: establish default transition length;

      line-height: 2;
      .opener {
        cursor: pointer;
        &.unopenable {
          display: none; //opener on unopenable items is never displayed and not seen by screen readers
        }
      }
    }

    li:not(.selected) .opener.openable {
      // Do not use display:none to avoid altering visual tree structure live or conflicting with flex layout.
      visibility: hidden; //opener on openable items not in a selected row is not displayed and not seen by screen readers
    }
    &:not(.selected) {
      li:not(.selected) .opener.openable {
        visibility: hidden; //opener on openable items not in a selected row is not displayed and not seen by screen readers
      }
    }
    li:not(.selected):hover .opener.openable {
      visibility: visible; //opener on openable items not in a selected row is not displayed and not seen by screen readers
    }
  }
}

[hidden] { display: none !important; }

@import "px-context-browser-predix";

